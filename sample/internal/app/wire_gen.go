// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/google/wire"
	"github.com/sin392/db-media-sample/sample/internal/adapter/controller"
	"github.com/sin392/db-media-sample/sample/internal/adapter/repository"
	"github.com/sin392/db-media-sample/sample/internal/config"
	"github.com/sin392/db-media-sample/sample/internal/infrastructure/database"
	"github.com/sin392/db-media-sample/sample/internal/infrastructure/server"
	"github.com/sin392/db-media-sample/sample/internal/usecase"
)

// Injectors from wire.go:

func InitializeApplication() (*Application, error) {
	configConfig, err := config.Load()
	if err != nil {
		return nil, err
	}
	databaseConfig := database.NewConfig()
	noSQL, err := database.NewMongoHandler(databaseConfig)
	if err != nil {
		return nil, err
	}
	shopQueryRepository := repository.NewShopQueryRepositoryNoSQL(noSQL)
	findShopByNameUsecase := usecase.NewFindShopByNameUsecase(shopQueryRepository)
	listShopUsecase := usecase.NewListShopUsecase(shopQueryRepository)
	shopCommandRepository := repository.NewShopCommandRepositoryNoSQL(noSQL)
	storeShopUsecase := usecase.NewStoreShopUsecase(shopCommandRepository)
	shopControllerPb := controller.NewShopControllerPb(findShopByNameUsecase, listShopUsecase, storeShopUsecase)
	grpcServer := server.NewGrpcServer(shopControllerPb)
	httpServer := server.NewHttpServer()
	gqlServer := server.NewGqlServer()
	application, err := NewApplication(configConfig, grpcServer, httpServer, gqlServer)
	if err != nil {
		return nil, err
	}
	return application, nil
}

// wire.go:

// usecaseとadapterが増えるとファイルが肥大化しそうだなぁ
// presenterは汎用的な表現にまとめていいかも
var WireSet = wire.NewSet(config.Load, server.NewHttpServer, server.NewGrpcServer, server.NewGqlServer, database.NewMongoHandler, database.NewConfig, controller.NewShopControllerPb, repository.NewShopQueryRepositoryNoSQL, repository.NewShopCommandRepositoryNoSQL, usecase.NewFindShopByNameUsecase, usecase.NewListShopUsecase, usecase.NewStoreShopUsecase)
