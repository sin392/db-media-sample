// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/google/wire"
	"github.com/sin392/db-media-sample/sample/internal/adapter/controller"
	"github.com/sin392/db-media-sample/sample/internal/adapter/repository"
	"github.com/sin392/db-media-sample/sample/internal/config"
	"github.com/sin392/db-media-sample/sample/internal/infrastructure"
	"github.com/sin392/db-media-sample/sample/internal/infrastructure/database"
	"github.com/sin392/db-media-sample/sample/internal/infrastructure/router"
	"github.com/sin392/db-media-sample/sample/internal/usecase"
)

// Injectors from wire.go:

func InitializeApplication() (*Application, error) {
	configConfig, err := config.Load()
	if err != nil {
		return nil, err
	}
	databaseConfig := database.NewConfig()
	noSQL, err := database.NewMongoHandler(databaseConfig)
	if err != nil {
		return nil, err
	}
	shopQueryRepository := repository.NewShopNoSQLQueryRepositoryImpl(noSQL)
	findShopByNameUsecase := usecase.NewFindShopByNameIntercepter(shopQueryRepository)
	findShopByNameController := controller.NewFindShopByNameController(findShopByNameUsecase)
	listShopUsecase := usecase.NewListShopIntercepter(shopQueryRepository)
	listShopController := controller.NewListShopController(listShopUsecase)
	shopRouter := router.NewShopRouter(findShopByNameController, listShopController)
	grpcServer := infrastructure.NewGrpcServer(shopRouter)
	httpServer := infrastructure.NewHttpServer()
	application, err := NewApplication(configConfig, grpcServer, httpServer)
	if err != nil {
		return nil, err
	}
	return application, nil
}

// wire.go:

// usecaseとadapterが増えるとファイルが肥大化しそうだなぁ
// presenterは汎用的な表現にまとめていいかも
var WireSet = wire.NewSet(config.Load, infrastructure.NewHttpServer, infrastructure.NewGrpcServer, router.NewShopRouter, database.NewMongoHandler, database.NewConfig, controller.NewFindShopByNameController, controller.NewListShopController, repository.NewShopNoSQLQueryRepositoryImpl, usecase.NewFindShopByNameIntercepter, usecase.NewListShopIntercepter)
