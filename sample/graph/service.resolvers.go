package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"strings"

	"github.com/sin392/db-media-sample/sample/graph/model"
	"github.com/vektah/gqlparser/v2/formatter"
)

// Service is the resolver for the service field.
func (r *queryResolver) Service(ctx context.Context) (*model.Service, error) {
	s := new(strings.Builder)
	f := formatter.NewFormatter(s)
	// parsedSchema is in the generated code
	f.FormatSchema(parsedSchema)
	service := &model.Service{
		Name:    "sample",
		Version: "v1.0.0",
		Schema:  s.String(),
	}
	return service, nil
}
