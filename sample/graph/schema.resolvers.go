package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"

	"github.com/jinzhu/copier"
	"github.com/sin392/db-media-sample/sample/graph/model"
	pb "github.com/sin392/db-media-sample/sample/pb/shop/v1"
)

// FindShopByName is the resolver for the FindShopByName field.
func (r *queryResolver) FindShopByName(ctx context.Context, name string) (*model.ShopTypeFindShopByNameResponse, error) {
	res, err := r.srv.FindShopByName(ctx, &pb.FindShopByNameRequest{Name: name})
	if err != nil {
		return nil, err
	}
	var gqlRes model.ShopTypeFindShopByNameResponse
	if err := copier.Copy(&gqlRes, res); err != nil {
		return nil, err
	}
	return &gqlRes, nil
}

// ListShop is the resolver for the ListShop field.
func (r *queryResolver) ListShop(ctx context.Context, perPage *int, page *int) (*model.ShopTypeListShopResponse, error) {
	res, err := r.srv.ListShop(ctx, &pb.ListShopRequest{})
	if err != nil {
		return nil, err
	}
	// gql用のモデルへの変換だるいなそのままpbのモデル返せないのか？
	var gqlRes model.ShopTypeListShopResponse
	if err := copier.Copy(&gqlRes, res); err != nil {
		return nil, err
	}
	return &gqlRes, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
