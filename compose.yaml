version: "3"
services:
  gql:
    build:
      context: ./
      dockerfile: gql-gateway/Dockerfile
      target: development
    ports:
      - "8082:8082"
    volumes:
      - ./gql-gateway:/app
      - .air.toml:/app/.air.toml
    depends_on:
      - api
    networks:
      - db-media-sample-network
  api:
    build:
      context: ./
      dockerfile: sample/Dockerfile
      target: development
    ports:
      - "50051:50051"
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ./sample:/app
      - .air.toml:/app/.air.toml
    depends_on:
      - migration
      - mongodb
    networks:
      - db-media-sample-network
    environment:
      - APP_ENV=local
      - MONGODB_DRIVER=mongodb
      - MONGODB_ROOT_USER=root
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=test
      # 通常スキーマは不要だがlocalの場合はHTTP通信するためにhttp://を付与
      - HTTP_TRACING_ENDPOINT=tempo:55681
  migration:
    image: migrate/migrate
    volumes:
      - ./sample/migrations:/app/migrations
    depends_on:
      - mongodb
    networks:
      - db-media-sample-network
    environment:
      - MONGODB_DRIVER=mongodb
      - MONGODB_ROOT_USER=root
      - MONGODB_ROOT_PASSWORD=password
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=test
    # entrypoint: sh -c 'migrate -path /app/migrations -database $${MONGODB_DRIVER}://$${MONGODB_ROOT_USER}:$${MONGODB_ROOT_PASSWORD}@$${MONGODB_HOST}:$${MONGODB_PORT}/$${MONGODB_DATABASE} up'
    entrypoint: sh -c 'migrate -path /app/migrations -database $${MONGODB_DRIVER}://$${MONGODB_HOST}:$${MONGODB_PORT}/$${MONGODB_DATABASE} up'
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    # volumes:
    #   - ./data:/data/db
    networks:
      - db-media-sample-network
  # zipkin:
  #   image: openzipkin/zipkin
  #   ports:
  #     - "9411:9411"
  #   networks:
  #     - db-media-sample-network
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      # 上書き先の名称注意
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    networks:
      - db-media-sample-network
  tempo:
    image: grafana/tempo:latest
    command:
      - "-config.file=/etc/tempo.yaml"
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    ports:
      - 55681:55681
      - 3200:3200 # Tempo query frontend
    networks:
      - db-media-sample-network
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      # - ./grafana:/var/lib/grafana/grafana.db
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - db-media-sample-network
networks:
  db-media-sample-network:
